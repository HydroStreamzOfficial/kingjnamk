--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=v2(v0(v30,16));if v19 then local v90=0;local v91;while true do if (v90==0) then v91=v5(v81,v19);v19=nil;v90=1;end if (v90==1) then return v91;end end else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(2 -(1 + 0)))))%(2^(((v33-1) -(v32-1)) + (1 -0))) ;return v82-(v82%(2 -1)) ;else local v83=(621 -(555 + 64))^(v32-((147 + 785) -(857 + 74))) ;return (((v31%(v83 + v83))>=v83) and (569 -((1244 -(282 + 595)) + 201))) or (927 -(214 + 713)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1639 -(1523 + 114)) );v18=v18 + 2 ;return (v36 * (231 + 25)) + v35 ;end local function v23() local v37=0 -0 ;local v38;local v39;local v40;local v41;while true do if (v37==0) then v38,v39,v40,v41=v1(v16,v18,v18 + (1068 -(68 + 997)) );v18=v18 + (1274 -(226 + 1044)) ;v37=1;end if (v37==(4 -3)) then return (v41 * 16777216) + (v40 * (65653 -(32 + 85))) + (v39 * (251 + 2 + 3)) + v38 ;end end end local function v24() local v42=v23();local v43=v23();local v44=(2444 -(998 + 488)) -(892 + 65) ;local v45=(v20(v43,(1 + 0) -0 ,47 -27 ) * ((3 -1)^(58 -26))) + v42 ;local v46=v20(v43,371 -(72 + 15 + (1035 -(201 + 571))) ,211 -(67 + 113) );local v47=((v20(v43,24 + 8 )==(2 -(1139 -(116 + 1022)))) and  -(1 + 0)) or (3 -2) ;if (v46==((3963 -3011) -(802 + 150))) then if (v45==((0 + 0) -0)) then return v47 * (0 -0) ;else local v92=0 -0 ;while true do if (v92==(18 -(10 + 8))) then v46=(10 -7) -2 ;v44=442 -(416 + 26) ;break;end end end elseif (v46==2047) then return ((v45==(0 -0)) and (v47 * ((1 + 0)/(997 -(915 + 82))))) or (v47 * NaN) ;end return v8(v47,v46-(1809 -786) ) * (v44 + (v45/((440 -(145 + 293))^(147 -95)))) ;end local function v25(v48) local v49;if  not v48 then local v84=0 -0 ;while true do if (v84==(859 -(814 + (930 -(261 + 624))))) then v48=v23();if (v48==(0 -0)) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -((1 -0) + 0) );v18=v18 + v48 ;local v50={};for v64=1 + 0 , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0 + 0 ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do if (v51~=2) then else for v93= #"!",v23() do local v94=(function() return 1409 -(450 + 959) ;end)();local v95=(function() return;end)();local v96=(function() return;end)();while true do if (v94==(1990 -(582 + 1408))) then local v106=(function() return 0 -0 ;end)();local v107=(function() return;end)();while true do if (v106==0) then v107=(function() return 0;end)();while true do if ((0 -0)~=v107) then else v95=(function() return 0 -0 ;end)();v96=(function() return nil;end)();v107=(function() return 1825 -(1195 + 629) ;end)();end if (v107~=1) then else v94=(function() return 1 -0 ;end)();break;end end break;end end end if (v94==(242 -(187 + 54))) then while true do if (v95==(780 -(162 + 618))) then v96=(function() return v21();end)();if (v20(v96, #">", #"|")~=(0 + 0)) then else local v114=(function() return 0 + 0 ;end)();local v115=(function() return;end)();local v116=(function() return;end)();local v117=(function() return;end)();while true do if (0==v114) then local v120=(function() return 0;end)();while true do if (v120==(0 -0)) then v115=(function() return v20(v96,2 -0 , #"asd");end)();v116=(function() return v20(v96, #"asd1",1 + 5 );end)();v120=(function() return 1637 -(1373 + 263) ;end)();end if (v120~=(1001 -(451 + 549))) then else v114=(function() return 1 + 0 ;end)();break;end end end if (1==v114) then local v121=(function() return 0;end)();while true do if (v121~=1) then else v114=(function() return 2;end)();break;end if (v121~=(0 -0)) then else v117=(function() return {v22(),v22(),nil,nil};end)();if (v115==(1384 -(746 + 638))) then local v314=(function() return 0;end)();while true do if (v314==(0 + 0)) then v117[ #"xxx"]=(function() return v22();end)();v117[ #"xnxx"]=(function() return v22();end)();break;end end elseif (v115== #"}") then v117[ #"19("]=(function() return v23();end)();elseif (v115==(2 -0)) then v117[ #"19("]=(function() return v23() -((343 -(218 + 123))^(1597 -(1535 + 46))) ;end)();elseif (v115~= #"-19") then else local v508=(function() return 0 + 0 ;end)();local v509=(function() return;end)();while true do if ((0 + 0)==v508) then v509=(function() return 560 -(306 + 254) ;end)();while true do if (v509==(0 + 0)) then v117[ #"xxx"]=(function() return v23() -((3 -1)^16) ;end)();v117[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v121=(function() return 1;end)();end end end if (v114~=(1470 -(899 + 568))) then else if (v20(v116, #"xxx", #"gha")~= #"|") then else v117[ #"0313"]=(function() return v57[v117[ #".com"]];end)();end v52[v93]=(function() return v117;end)();break;end if (v114~=(2 + 0)) then else if (v20(v116, #"{", #"]")~= #",") then else v117[4 -2 ]=(function() return v57[v117[2]];end)();end if (v20(v116,2,2)== #">") then v117[ #"nil"]=(function() return v57[v117[ #"19("]];end)();end v114=(function() return 606 -(268 + 335) ;end)();end end end break;end end break;end end end for v97= #" ",v23() do v53[v97-#"|" ]=(function() return v28();end)();end return v55;end if (v51~= #",") then else local v87=(function() return 0;end)();while true do if (v87~=2) then else v51=(function() return 292 -(60 + 230) ;end)();break;end if ((573 -(426 + 146))==v87) then for v108= #"\\",v56 do local v109=(function() return 0 + 0 ;end)();local v110=(function() return;end)();local v111=(function() return;end)();local v112=(function() return;end)();while true do if (v109==1) then v112=(function() return nil;end)();while true do if (v110~= #"|") then else if (v111== #"]") then v112=(function() return v21()~=(1456 -(282 + 1174)) ;end)();elseif (v111==2) then v112=(function() return v24();end)();elseif (v111== #"xnx") then v112=(function() return v25();end)();end v57[v108]=(function() return v112;end)();break;end if (v110==0) then local v119=(function() return 0;end)();while true do if (v119~=(812 -(569 + 242))) then else v110=(function() return  #" ";end)();break;end if (v119~=0) then else v111=(function() return v21();end)();v112=(function() return nil;end)();v119=(function() return 2 -1 ;end)();end end end end break;end if (v109~=(0 + 0)) then else local v113=(function() return 1024 -(706 + 318) ;end)();while true do if (v113~=(1252 -(721 + 530))) then else v109=(function() return 1;end)();break;end if (0==v113) then v110=(function() return 0;end)();v111=(function() return nil;end)();v113=(function() return 1;end)();end end end end end v55[ #"91("]=(function() return v21();end)();v87=(function() return 1273 -(945 + 326) ;end)();end if (0~=v87) then else v56=(function() return v23();end)();v57=(function() return {};end)();v87=(function() return 2 -1 ;end)();end end end if (0==v51) then local v88=(function() return 0;end)();local v89=(function() return;end)();while true do if (v88==(0 + 0)) then v89=(function() return 0;end)();while true do if (v89==(700 -(271 + 429))) then v52=(function() return {};end)();v53=(function() return {};end)();v89=(function() return 1;end)();end if (v89~=(1 + 0)) then else v54=(function() return {};end)();v55=(function() return {v52,v53,nil,v54};end)();v89=(function() return 2;end)();end if (v89~=(1502 -(1408 + 92))) then else v51=(function() return  #"<";end)();break;end end break;end end end end end local function v29(v58,v59,v60) local v61=v58[1087 -(461 + 56 + 569) ];local v62=v58[1290 -(993 + 295) ];local v63=v58[1 + 2 ];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1172 -(418 + 753) ;local v71= -(1 + 0);local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v85=0 + 0 ,v74 do if ((546==546) and (v85>=v68)) then v72[v85-v68 ]=v73[v85 + 1 + 0 ];else v76[v85]=v73[v85 + 1 + 0 ];end end local v77=(v74-v68) + (530 -((1883 -(29 + 1448)) + 123)) ;local v78;local v79;while true do local v86=1769 -(1749 + 20) ;while true do if (v86==(1 + 0)) then if (v79<=(1387 -(1249 + 73))) then if (v79<=32) then if ((v79<=(6 + 9)) or (2366<=8)) then if ((v79<=((2541 -(135 + 1254)) -(466 + 679))) or (2590==2864)) then if (v79<=(6 -3)) then if (v79<=((7 -5) -1)) then if (v79>(1900 -(106 + 1794))) then v76[v78[1 + (4 -3) ]]=v78[3];else v76[v78[2]]=v78[1 + 2 ]^v76[v78[(8 + 3) -7 ]] ;end elseif ((v79>2) or (2624>4149)) then local v129=v78[2];v76[v129](v76[v129 + (2 -1) ]);elseif (v78[116 -(4 + (1637 -(389 + 1138))) ]<v76[v78[588 -(57 + 527) ]]) then v70=v78[1430 -(41 + 1386) ];else v70=v70 + 1 ;end elseif (v79<=(108 -(17 + 86))) then if (v79>(3 + 1)) then local v130=0;while true do if ((v130==(0 -(574 -(102 + 472)))) or (2618>=4495)) then v76[v78[5 -3 ]]=v78[3]~=(166 -(116 + 6 + 44)) ;v70=v70 + ((1 + 0) -0) ;break;end end else local v131=0;local v132;while true do if ((0 -0)==v131) then v132=v78[2 + 0 ];do return v13(v76,v132,v71);end break;end end end elseif ((v79>(1 + 5)) or (2485>=3131)) then v76[v78[2]][v78[5 -2 ]]=v76[v78[69 -(30 + 35) ]];else v76[v78[2 + 0 ]]=v29(v67[v78[3 + 0 ]],nil,v60);end elseif ((v79<=(1268 -(1043 + 214))) or (2804<=2785)) then if ((v79<=(33 -24)) or (4571==3415)) then if (v79==8) then if (v78[1214 -(323 + 889) ]==v76[v78[4]]) then v70=v70 + (2 -1) ;else v70=v78[583 -(361 + 219) ];end else for v315=v78[2],v78[3] do v76[v315]=nil;end end elseif (v79==(1555 -(320 + 1225))) then local v136=v78[2];v76[v136]=v76[v136]();else v76[v78[322 -(53 + 267) ]]=v76[v78[1 + 2 ]] * v76[v78[417 -(15 + (708 -310)) ]] ;end elseif ((v79<=(995 -(18 + 964))) or (4441>4787)) then if (v79==(44 -32)) then v76[v78[2 + 0 ]]=v76[v78[2 + 1 ]];else local v141=850 -(20 + 830) ;local v142;local v143;local v144;while true do if (v141==(0 + 0 + 0)) then v142=v78[(1592 -(157 + 1307)) -(116 + 10) ];v143={v76[v142](v76[v142 + (739 -(542 + 196)) ])};v141=(2 -1) -0 ;end if (v141==1) then v144=0;for v447=v142,v78[2 + 2 ] do local v448=0 + 0 ;while true do if ((0 + 0)==v448) then v144=v144 + 1 ;v76[v447]=v143[v144];break;end end end break;end end end elseif (v79==((4 + 32) -22)) then if (v76[v78[4 -2 ]]<=v76[v78[4]]) then v70=v70 + (1552 -((1999 -873) + 425)) ;else v70=v78[3];end elseif (v76[v78[407 -(118 + 107 + 180) ]]<v76[v78[15 -(27 -16) ]]) then v70=v78[(2150 -(834 + 192)) -(118 + 1003) ];else v70=v70 + (2 -1) ;end elseif (v79<=(400 -(142 + 235))) then if (v79<=(86 -67)) then if (v79<=(4 + 13)) then if ((1920==1920) and (v79>(993 -(553 + 424)))) then v76[v78[3 -1 ]]=v76[v78[3 + 0 ]] -v76[v78[4]] ;else v76[v78[2 + 0 ]]=v59[v78[1 + 2 ]];end elseif (v79>(11 + 7)) then v76[v78[1 + 1 ]]();else local v148=v78[2 + 0 ];do return v13(v76,v148,v148 + v78[6 -3 ] );end end elseif (v79<=(58 -37)) then if (v79>((12 + 32) -24)) then v76[v78[2]]=v76[v78[3]]/v78[1 + 1 + 2 ] ;else v76[v78[9 -7 ]]= #v76[v78[3]];end elseif (v79==(775 -(239 + 514))) then local v151=0 + 0 ;local v152;while true do if ((0==v151) or (647==4477)) then v152=v78[2];v76[v152]=v76[v152](v13(v76,v152 + (1330 -(797 + 532)) ,v78[3 + 0 ]));break;end end else local v153=v78[2];v76[v153]=v76[v153]();end elseif ((3819==3819) and (v79<=(10 + 17))) then if ((v79<=25) or (1466>4360)) then if (v79==(56 -32)) then do return v76[v78[(1864 -660) -(373 + 829) ]];end else v76[v78[733 -(476 + 255) ]]=v76[v78[3]] * v76[v78[1134 -(369 + 761) ]] ;end elseif (v79>((320 -(300 + 4)) + 3 + 7)) then local v156=0 -0 ;local v157;local v158;while true do if (v156==(0 -0)) then v157=v78[(367 -(112 + 250)) -2 ];v158=v76[v157];v156=1 + 0 ;end if ((v156==(239 -(64 + 174))) or (14>994)) then for v449=v157 + 1 + 0 ,v78[(12 -7) -1 ] do v158=v158   .. v76[v449] ;end v76[v78[338 -(144 + 192) ]]=v158;break;end end else local v159=v78[218 -(42 + 174) ];local v160={v76[v159](v13(v76,v159 + 1 + 0 ,v78[3]))};local v161=0 + 0 ;for v317=v159,v78[(780 + 728) -(363 + 1141) ] do local v318=1580 -(1183 + 397) ;while true do if ((401<=734) and (v318==0)) then v161=v161 + (2 -1) ;v76[v317]=v160[v161];break;end end end end elseif ((v79<=(22 + 6 + 1)) or (2167>=3426)) then if (v79==28) then local v162=v78[2];local v163=v78[4];local v164=v162 + 2 ;local v165={v76[v162](v76[v162 + (1976 -(1913 + 62)) ],v76[v164])};for v319=1 + 0 + 0 ,v163 do v76[v164 + v319 ]=v165[v319];end local v166=v165[2 -1 ];if ((764<3285) and v166) then v76[v164]=v166;v70=v78[1936 -(565 + 1368) ];else v70=v70 + 1 ;end else local v167=0 -(0 + 0) ;local v168;while true do if ((2499==2499) and (v167==(1661 -(1477 + 184)))) then v168=v76[v78[4]];if  not v168 then v70=v70 + 1 ;else v76[v78[2 -0 ]]=v168;v70=v78[3 + 0 ];end break;end end end elseif (v79<=((2300 -(1001 + 413)) -(564 + (650 -358)))) then v76[v78[2 -0 ]]=v60[v78[8 -5 ]];elseif (v79==(335 -(244 + 60))) then local v359=v78[2 + 0 ];do return v13(v76,v359,v71);end else v76[v78[478 -(41 + 435) ]]=v76[v78[3]][v76[v78[1005 -(938 + 63) ]]];end elseif ((v79<=(37 + 11)) or (692>=4933)) then if (v79<=40) then if (v79<=(1161 -(936 + (1071 -(244 + 638))))) then if (v79<=(12 + 22)) then if (v79==(1646 -((2258 -(627 + 66)) + (142 -94)))) then local v171=0;local v172;while true do if (v171==(0 + 0)) then v172=v78[1140 -(782 + 356) ];v76[v172](v13(v76,v172 + (268 -(176 + 91)) ,v78[7 -4 ]));break;end end elseif  not v76[v78[(604 -(512 + 90)) -0 ]] then v70=v70 + ((2999 -(1665 + 241)) -(975 + 117)) ;else v70=v78[1878 -(157 + 1718) ];end elseif (v79>35) then v60[v78[3 + 0 ]]=v76[v78[6 -4 ]];else do return;end end elseif (v79<=38) then if (v79>37) then v76[v78[6 -4 ]]=v60[v78[3]];elseif (v76[v78[2]]<v76[v78[1022 -(697 + 321) ]]) then v70=v78[3];else v70=v70 + (2 -(718 -(373 + 344))) ;end elseif (v79>(82 -43)) then local v177=v78[2];local v178={};for v322=2 -1 , #v75 do local v323=v75[v322];for v364=0 + 0 , #v323 do local v365=0;local v366;local v367;local v368;while true do if ((v365==(0 -(0 + 0))) or (3154<=2260)) then v366=v323[v364];v367=v366[2 -1 ];v365=1228 -(322 + 905) ;end if (v365==1) then v368=v366[613 -(602 + 9) ];if ((v367==v76) and (v368>=v177)) then v178[v368]=v367[v368];v366[(315 + 875) -((1184 -735) + 740) ]=v178;end break;end end end end else local v179=0;local v180;local v181;local v182;local v183;while true do if (v179==(874 -(826 + 46))) then for v452=v180,v71 do local v453=947 -(245 + 702) ;while true do if (v453==(0 -0)) then v183=v183 + 1 + 0 ;v76[v452]=v181[v183];break;end end end break;end if (((3211 -1313) -(260 + 1638))==v179) then v180=v78[442 -(382 + 58) ];v181,v182=v69(v76[v180](v76[v180 + (3 -2) ]));v179=1 + 0 ;end if (v179==(1 -0)) then v71=(v182 + v180) -(2 -1) ;v183=0;v179=1207 -(902 + 303) ;end end end elseif ((v79<=(96 -52)) or (2637>3149)) then if (v79<=(100 -58)) then if (v79==(4 + (1136 -(35 + 1064)))) then local v184=1690 -(1121 + 569) ;local v185;while true do if ((v184==(214 -(22 + 192))) or (3992<2407)) then v185=v78[2];v76[v185](v76[v185 + (684 -(483 + 200)) ]);break;end end else v76[v78[(1066 + 399) -((3003 -1599) + 59) ]]=v78[8 -5 ]~=(0 -0) ;end elseif (v79==(808 -(468 + 297))) then v76[v78[564 -(334 + 1 + 227) ]]=v29(v67[v78[10 -7 ]],nil,v60);elseif ((v78[2]<=v76[v78[4]]) or (2902>4859)) then v70=v70 + (2 -1) ;else v70=v78[3];end elseif (v79<=(83 -37)) then if (v79==((1249 -(298 + 938)) + 32)) then if ((1679<4359) and (v78[238 -(141 + 95) ]<=v76[v78[4 + 0 ]])) then v70=v70 + (1260 -(233 + 1026)) ;else v70=v78[7 -(1670 -(636 + 1030)) ];end elseif (v76[v78[4 -2 ]]~=v78[1 + 2 + 1 ]) then v70=v70 + (2 -1) ;else v70=v78[3 + 0 ];end elseif (v79==(25 + 0 + 7 + 15)) then local v188=0 -(0 + 0) ;local v189;while true do if ((1913<4670) and (v188==(0 + 0))) then v189=v76[v78[167 -(92 + 71) ]];if  not v189 then v70=v70 + (222 -(55 + 166)) + 0 ;else v76[v78[2 -0 ]]=v189;v70=v78[768 -(574 + 191) ];end break;end end else v76[v78[2 + 0 ]]=v76[v78[7 -4 ]] * v78[3 + 1 ] ;end elseif (v79<=(11 + 45)) then if (v79<=(901 -(254 + 595))) then if (v79<=(176 -(55 + 71))) then if (v79>(5 + 44)) then local v191=v67[v78[3 -(0 -0) ]];local v192;local v193={};v192=v10({},{__index=function(v324,v325) local v326=1790 -(573 + 1217) ;local v327;while true do if (v326==(0 -0)) then v327=v193[v325];return v327[1 + 0 ][v327[2 -0 ]];end end end,__newindex=function(v328,v329,v330) local v331=v193[v329];v331[940 -(714 + 225) ][v331[5 -3 ]]=v330;end});for v333=1 -0 ,v78[1 + 3 ] do local v334=0;local v335;while true do if (v334==(0 -0)) then v70=v70 + (807 -(118 + 688)) ;v335=v66[v70];v334=49 -(25 + 23) ;end if ((v334==((1369 -(34 + 1334)) + 0)) or (2846<879)) then if (v335[1887 -(927 + 959) ]==(279 -196)) then v193[v333-((282 + 451) -(16 + 716)) ]={v76,v335[100 -(11 + 86) ]};else v193[v333-1 ]={v59,v335[288 -(175 + 110) ]};end v75[ #v75 + (2 -1) ]=v193;break;end end end v76[v78[2]]=v29(v191,v192,v60);else local v195=v78[(1292 -(1035 + 248)) -7 ];do return v76[v195](v13(v76,v195 + (1797 -(503 + (1314 -(20 + 1)))) ,v71));end end elseif ((4588==4588) and (v79>(142 -91))) then v76[v78[2 + 0 ]]=v78[1064 -(422 + 388 + 251) ]~=(0 + 0) ;v70=v70 + 1 + 0 ;else v76[v78[2 + 0 ]][v78[536 -(43 + 490) ]]=v78[(1056 -(134 + 185)) -(711 + 22) ];end elseif (v79<=(208 -154)) then if (v79==(912 -(240 + 619))) then v76[v78[(1134 -(549 + 584)) + 1 ]]=v76[v78[4 -1 ]] -v76[v78[1 + 3 ]] ;else local v200=v78[1746 -(1344 + 400) ];local v201,v202=v69(v76[v200](v76[v200 + (406 -(255 + 150)) ]));v71=(v202 + v200) -(1 + 0) ;local v203=0 + 0 ;for v336=v200,v71 do local v337=0;while true do if ((0 -0)==v337) then v203=v203 + (3 -2) ;v76[v336]=v201[v203];break;end end end end elseif (v79>(740 -(314 + 371))) then local v204=1739 -(404 + (4582 -3247)) ;local v205;while true do if ((0==v204) or (347==2065)) then v205=v78[408 -(183 + 223) ];v76[v205](v13(v76,v205 + (1 -0) ,v71));break;end end elseif (v78[2 + 0 ]<v76[v78[2 + 2 ]]) then v70=v70 + (338 -(10 + 327)) ;else v70=v78[3 + 0 ];end elseif (v79<=((1366 -(478 + 490)) -(118 + 220))) then if ((v79<=(20 + 38)) or (1311>2697)) then if (v79==(506 -(108 + 341))) then local v206=0;local v207;while true do if (v206==(0 + 0 + 0)) then v207=v78[8 -6 ];v76[v207](v13(v76,v207 + (1494 -(711 + 782)) ,v71));break;end end else v76[v78[2]]=v76[v78[3]][v78[7 -(1175 -(786 + 386)) ]];end elseif ((v79>(190 -131)) or (2717>3795)) then local v210=469 -(270 + 199) ;local v211;local v212;while true do if ((v210==(1 + 0)) or (1081<391)) then v76[v211 + (1820 -(580 + 1239)) ]=v212;v76[v211]=v212[v78[11 -7 ]];break;end if (v210==(0 + (1379 -(1055 + 324)))) then v211=v78[2];v212=v76[v78[1343 -(1093 + 247) ]];v210=1 + 0 ;end end else local v213=v78[1 + 1 ];local v214={v76[v213](v13(v76,v213 + 1 + 0 ,v78[1170 -(645 + 522) ]))};local v215=(1591 + 199) -(1010 + 780) ;for v338=v213,v78[4 + 0 ] do local v339=0 -0 ;while true do if ((((0 + 0) -0)==v339) or (121>3438)) then v215=v215 + 1 ;v76[v338]=v214[v215];break;end end end end elseif (v79<=(1898 -(1045 + 791))) then if (v79==(154 -93)) then if (v78[7 -5 ]<v76[v78[4]]) then v70=v78[4 -1 ];else v70=v70 + 1 ;end elseif (v76[v78[507 -(351 + 154) ]]~=v76[v78[1578 -(1281 + 293) ]]) then v70=v70 + (267 -((94 -66) + 238)) ;else v70=v78[6 -(8 -5) ];end elseif (v79<=(1622 -(1381 + 178))) then v76[v78[2 + 0 ]]=v76[v78[3 + 0 ]][v76[v78[2 + 2 ]]];elseif (v79==((552 -332) -156)) then for v421=v78[2 + 0 + 0 ],v78[473 -(381 + 89) ] do v76[v421]=nil;end else local v375=0 + 0 ;local v376;local v377;local v378;while true do if ((0 + 0)==v375) then v376=v78[(7 -5) -0 ];v377={v76[v376](v13(v76,v376 + 1 ,v71))};v375=1 -0 ;end if (v375==1) then v378=1784 -(214 + 1570) ;for v501=v376,v78[1459 -(990 + 465) ] do local v502=0 + (0 -0) ;while true do if (v502==0) then v378=v378 + 1 + 0 ;v76[v501]=v377[v378];break;end end end break;end end end elseif (v79<=(96 + 2)) then if ((71<1949) and (v79<=(318 -237))) then if (v79<=((1357 + 442) -(1668 + 58))) then if ((4254==4254) and (v79<=(695 -((1309 -797) + 114)))) then if ((3196>=2550) and (v79<=(174 -107))) then if ((2456<4176) and (v79>66)) then local v218=v78[3 -(689 -(364 + 324)) ];local v219=v76[v218];for v340=v218 + (3 -2) ,v78[2 + (2 -1) ] do v7(v219,v76[v340]);end else v76[v78[1 + 1 ]][v76[v78[6 -3 ]]]=v76[v78[4 + 0 ]];end elseif (v79==(229 -161)) then v59[v78[1997 -(109 + 1885) ]]=v76[v78[1471 -(421 + 848 + 200) ]];else local v224=(0 -0) -0 ;local v225;local v226;local v227;while true do if ((815 -(98 + 717))==v224) then v225=v78[2];v226={v76[v225](v76[v225 + 1 ])};v224=(2 -1) -0 ;end if ((v224==(1269 -(1249 + 19))) or (1150==3452)) then v227=0 -0 ;for v461=v225,v78[1 + 3 ] do local v462=0 + 0 ;while true do if ((1875<2258) and ((0 + 0)==v462)) then v227=v227 + 1 + 0 ;v76[v461]=v226[v227];break;end end end break;end end end elseif ((1173>41) and (v79<=71)) then if ((v79==(194 -(112 + 12))) or (56>=3208)) then v76[v78[2]]=v59[v78[3]];else do return;end end elseif ((4313>3373) and (v79==(280 -208))) then if (v76[v78[6 -4 ]]==v76[v78[2 + 2 ]]) then v70=v70 + 1 + (1086 -(686 + 400)) ;else v70=v78[3 + 0 + 0 ];end else do return v76[v78[2 + 0 ]];end end elseif (v79<=77) then if (v79<=75) then if ((v79==(35 + 39)) or (4493==2225)) then v76[v78[1435 -(797 + 636) ]][v76[v78[3]]]=v76[v78[19 -15 ]];else v76[v78[(1850 -(73 + 156)) -(1427 + 1 + 191) ]]=v78[(813 -(721 + 90)) + 1 ];end elseif ((3104>=3092) and (v79>76)) then local v234=v78[1 + 1 ];local v235=v76[v234];local v236=v78[6 -(9 -6) ];for v341=471 -(224 + 246) ,v236 do v235[v341]=v76[v234 + v341 ];end elseif ((3548>3098) and v76[v78[2]]) then v70=v70 + 1 + 0 ;else v70=v78[2 + 1 ];end elseif (v79<=(405 -(192 + 134))) then if (v79>(1354 -(316 + 960))) then if (v76[v78[2 + 0 ]]<v76[v78[(5 -1) + 0 ]]) then v70=v70 + 1 + 0 ;else v70=v78[11 -8 ];end else local v237=0;local v238;while true do if (((551 -(83 + (861 -393)))==v237) or (3252==503)) then v238=v78[(328 + 1480) -(1202 + 604) ];v76[v238]=v76[v238](v76[v238 + (4 -(1 + 2)) ]);break;end end end elseif (v79>(133 -53)) then if v76[v78[5 -3 ]] then v70=v70 + 1 ;else v70=v78[328 -(45 + 280) ];end elseif  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3 + 0 ];end elseif (v79<=(78 + 11)) then if (v79<=(32 + 53)) then if (v79<=83) then if ((4733>2066) and (v79==(46 + 36))) then if (v76[v78[1 + 1 ]]<v76[v78[6 -2 ]]) then v70=v70 + (1912 -(340 + 1571)) ;else v70=v78[3 + 0 ];end else v76[v78[1 + 1 ]]=v76[v78[1775 -(1733 + 39) ]];end elseif (v79>((457 -227) -146)) then v76[v78[2]]=v76[v78[1037 -(125 + (3024 -2115)) ]] + v76[v78[4]] ;else local v242=1948 -(1096 + 852) ;local v243;local v244;local v245;while true do if (v242==(0 + 0)) then v243=v67[v78[3 -(513 -(203 + 310)) ]];v244=nil;v242=1 + 0 ;end if (v242==(513 -(409 + 103))) then v245={};v244=v10({},{__index=function(v463,v464) local v465=v245[v464];return v465[1][v465[238 -(46 + 190) ]];end,__newindex=function(v466,v467,v468) local v469=v245[v467];v469[96 -(51 + 44) ][v469[1 + 1 ]]=v468;end});v242=1319 -(1114 + 203) ;end if (v242==(728 -(228 + 498))) then for v471=1 + 0 ,v78[3 + (1994 -(1238 + 755)) ] do v70=v70 + (664 -(174 + 489)) ;local v472=v66[v70];if ((3549>=916) and (v472[2 -1 ]==(1988 -(830 + 76 + 999)))) then v245[v471-(525 -(303 + 221)) ]={v76,v472[1165 -(171 + 991) ]};else v245[v471-1 ]={v59,v472[7 -4 ]};end v75[ #v75 + 1 + (864 -(196 + 668)) ]=v245;end v76[v78[6 -4 ]]=v29(v243,v244,v60);break;end end end elseif (v79<=(250 -163)) then if (v79==(138 -52)) then local v246=v78[2];local v247,v248=v69(v76[v246](v13(v76,v246 + (3 -2) ,v78[1251 -(111 + 1137) ])));v71=(v248 + v246) -((627 -468) -(91 + 67)) ;local v249=0 -0 ;for v344=v246,v71 do v249=v249 + 1 + 0 ;v76[v344]=v247[v249];end else v76[v78[525 -(423 + 100) ]][v78[1 + 2 ]]=v76[v78[10 -6 ]];end elseif (v79==88) then local v252=0 + (0 -0) ;local v253;local v254;while true do if ((v252==(772 -(326 + 445))) or (2189<=245)) then for v474=v253 + (4 -(836 -(171 + 662))) ,v78[4] do v254=v254   .. v76[v474] ;end v76[v78[4 -2 ]]=v254;break;end if ((v252==(0 -0)) or (1389>3925)) then v253=v78[714 -(530 + 181) ];v254=v76[v253];v252=94 -(4 + 89) ;end end else local v255=881 -(614 + 267) ;local v256;local v257;local v258;while true do if (v255==(0 -0)) then v256=v78[34 -(19 + 13) ];v257=v76[v256];v255=1 -0 ;end if (v255==1) then v258=v78[6 -3 ];for v475=2 -1 ,v258 do v257[v475]=v76[v256 + v475 ];end break;end end end elseif (v79<=(34 + 59)) then if (v79<=(24 + 67)) then if ((4169>=3081) and (v79==(158 -68))) then local v259=0 -0 ;local v260;while true do if ((349<=894) and (v259==(1812 -(1293 + 519)))) then v260=v78[2];v76[v260]=v76[v260](v76[v260 + (4 -3) ]);break;end end elseif ((731<=2978) and (v76[v78[3 -1 ]]<=v76[v78[4]])) then v70=v70 + (2 -1) ;else v70=v78[3];end elseif ((v79==(175 -83)) or (892>3892)) then if (v76[v78[2]]~=v76[v78[4]]) then v70=v70 + (4 -3) ;else v70=v78[6 -(2 + 1) ];end else local v261=0 + 0 ;local v262;while true do if ((v261==(0 + 0)) or (4466==900)) then v262=v78[4 -2 ];v76[v262](v13(v76,v262 + 1 ,v78[1 + 2 ]));break;end end end elseif ((v79<=(32 + 63)) or (2084>=2888)) then if (v79==(59 + 35)) then v76[v78[1098 -(709 + 387) ]][v78[1861 -(673 + 1185) ]]=v78[4];else local v265=0 -0 ;local v266;local v267;local v268;while true do if ((479<1863) and (1==v265)) then v268=0 -0 ;for v478=v266,v78[6 -2 ] do v268=v268 + 1 + 0 ;v76[v478]=v267[v268];end break;end if (v265==(0 + 0)) then v266=v78[2 -0 ];v267={v76[v266](v13(v76,v266 + (1 -0) ,v71))};v265=1 -0 ;end end end elseif (v79<=(1976 -(446 + 1434))) then local v269=1283 -(1040 + 243) ;local v270;while true do if (v269==(0 -0)) then v270=v78[1849 -(559 + 1288) ];do return v76[v270](v13(v76,v270 + (1932 -(609 + 1322)) ,v78[3]));end break;end end elseif (v79>((2544 -(941 + 1052)) -(13 + 441))) then local v387=0 -0 ;local v388;while true do if (v387==(2 -1)) then for v505=v388,v71 do local v506=0 -0 ;local v507;while true do if ((v506==0) or (2428>=4038)) then v507=v72[v505-v388 ];v76[v505]=v507;break;end end end break;end if (((0 + 0 + 0)==v387) or (2878>2897)) then v388=v78[7 -5 ];v71=(v388 + v77) -1 ;v387=(1515 -(822 + 692)) + 0 ;end end else v76[v78[1 + 1 ]]= #v76[v78[8 -5 ]];end elseif ((v79<=(63 + (72 -21))) or (2469>3676)) then if (v79<=106) then if (v79<=102) then if (v79<=(183 -83)) then if (v79==(66 + 16 + 17)) then local v271=v78[2 + 0 ];v76[v271]=v76[v271](v13(v76,v271 + 1 + 0 ,v78[3 + 0 ]));else local v273=0 + 0 ;local v274;while true do if ((233<487) and ((433 -(153 + 280))==v273)) then v274=v78[5 -3 ];v71=(v274 + v77) -(1 + 0) ;v273=1 + 0 ;end if (v273==(1 + 0)) then for v481=v274,v71 do local v482=v72[v481-v274 ];v76[v481]=v482;end break;end end end elseif ((2473>=201) and (v79==(92 + 9))) then local v275=v78[(299 -(45 + 252)) + 0 ];local v276=v78[5 -(1 + 0) ];local v277=v275 + 2 ;local v278={v76[v275](v76[v275 + (668 -(89 + 578)) ],v76[v277])};for v347=1 + 0 ,v276 do v76[v277 + v347 ]=v278[v347];end local v279=v278[(2 -1) -0 ];if v279 then local v390=0;while true do if (v390==(1049 -(572 + 477))) then v76[v277]=v279;v70=v78[1 + 2 ];break;end end else v70=v70 + 1 ;end else local v280=v78[2 + 0 ];v76[v280]=v76[v280](v13(v76,v280 + 1 ,v71));end elseif ((4120>=133) and (v79<=(13 + 91))) then if (v79==103) then local v282=86 -(84 + (435 -(114 + 319))) ;local v283;while true do if (v282==0) then v283=v78[2 -0 ];v76[v283]=v76[v283](v13(v76,v283 + 1 + (0 -0) ,v71));break;end end else local v284=v78[844 -(497 + (442 -97)) ];local v285,v286=v69(v76[v284](v13(v76,v284 + 1 ,v78[3])));v71=(v286 + v284) -1 ;local v287=0 + 0 + 0 ;for v350=v284,v71 do v287=v287 + 1 + 0 ;v76[v350]=v285[v287];end end elseif (v79>105) then local v288=1333 -(605 + 728) ;local v289;while true do if ((3080>=1986) and (0==v288)) then v289=v78[2 + 0 ];do return v76[v289](v13(v76,v289 + (1 -0) ,v71));end break;end end else v76[v78[(1 -0) + 1 ]]=v78[10 -7 ]~=(0 + 0) ;end elseif ((v79<=(304 -194)) or (1439>3538)) then if (v79<=108) then if ((v79>(81 + 26)) or (419<7)) then v76[v78[2]]=v78[5 -2 ]^v76[v78[4]] ;else do return v76[v78[491 -(457 + 32) ]]();end end elseif ((2820==2820) and (v79==(47 + 62))) then v76[v78[2]]=v76[v78[1405 -((2795 -(556 + 1407)) + 570) ]] * v78[4] ;elseif (v76[v78[2 + 0 ]]~=v78[2 + 2 ]) then v70=v70 + (3 -2) ;else v70=v78[2 + 1 ];end elseif ((v79<=(908 -(588 + 208))) or (4362<=3527)) then if (v79==(299 -188)) then local v293=v78[2];local v294=v76[v78[1803 -(884 + 916) ]];v76[v293 + (1 -0) ]=v294;v76[v293]=v294[v78[3 + 1 ]];else v70=v78[656 -(232 + 421) ];end elseif (v79==113) then v76[v78[2]]=v76[v78[1892 -(1569 + 320) ]] + v78[(1207 -(741 + 465)) + 3 ] ;elseif ((2613<=2680) and (v76[v78[1 + 1 ]]==v78[4])) then v70=v70 + (3 -2) ;else v70=v78[608 -(316 + 289) ];end elseif (v79<=122) then if ((v79<=118) or (1482>=4288)) then if ((v79<=116) or (2462>4426)) then if ((4774==4774) and (v79==(301 -186))) then do return v76[v78[2]]();end else v59[v78[1 + 2 ]]=v76[v78[1455 -(666 + 787) ]];end elseif (v79==117) then v76[v78[2]]=v76[v78[428 -((825 -(170 + 295)) + 35 + 30) ]][v78[4 + 0 ]];else v70=v78[3];end elseif (v79<=120) then if (v79>(373 -(79 + 175))) then if (v76[v78[2 -0 ]]==v78[4]) then v70=v70 + 1 + 0 + 0 ;else v70=v78[8 -5 ];end elseif ((566<=960) and (v78[2]<v76[v78[7 -3 ]])) then v70=v70 + (900 -(503 + 396)) ;else v70=v78[184 -(92 + 89) ];end elseif (v79==(234 -113)) then v76[v78[2 + 0 ]]={};else v76[v78[2 + 0 ]]=v76[v78[11 -8 ]]/v78[4] ;end elseif ((v79<=(18 + 108)) or (2910<=1930)) then if (v79<=((694 -412) -158)) then if (v79==(108 + 15)) then if (v78[2]==v76[v78[2 + 2 ]]) then v70=v70 + 1 ;else v70=v78[8 -(5 + 0) ];end else v76[v78[1 + 1 ]]=v76[v78[4 -1 ]] + v76[v78[4]] ;end elseif (v79==(1369 -(485 + 759))) then local v308=0 -(0 + 0) ;local v309;while true do if ((v308==(1189 -(442 + 747))) or (19>452)) then v309=v78[2];do return v76[v309](v13(v76,v309 + (1136 -(472 + 360 + 303)) ,v78[949 -(88 + 858) ]));end break;end end else v76[v78[1 + 1 ]]();end elseif (v79<=((1336 -(957 + 273)) + 22)) then if (v79==(34 + 93)) then local v310=0 + 0 ;local v311;local v312;while true do if ((v310==(790 -(766 + 23))) or (907>3152)) then for v484=4 -3 , #v75 do local v485=0 + 0 ;local v486;while true do if ((v485==(0 -0)) or (2505>4470)) then v486=v75[v484];for v520=0 -(0 -0) , #v486 do local v521=v486[v520];local v522=v521[1];local v523=v521[6 -4 ];if ((v522==v76) and (v523>=v311)) then v312[v523]=v522[v523];v521[1074 -(1036 + 37) ]=v312;end end break;end end end break;end if (v310==(0 + 0)) then v311=v78[3 -1 ];v312={};v310=1 + 0 ;end end elseif (v76[v78[1482 -(641 + 839) ]]==v76[v78[917 -((2398 -1488) + 3) ]]) then v70=v70 + (2 -1) ;else v70=v78[9 -6 ];end elseif (v79<=((8977 -7164) -(1466 + 218))) then v76[v78[1 + 1 ]]=v76[v78[1151 -(556 + 592) ]] + v78[2 + 2 ] ;elseif (v79>130) then v76[v78[(2590 -(389 + 1391)) -(329 + 479) ]]={};else v60[v78[3]]=v76[v78[856 -(174 + 680) ]];end v70=v70 + (3 -2) ;break;end if (v86==(0 -0)) then v78=v66[v70];v79=v78[1 + 0 + 0 ];v86=740 -(396 + 343) ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
